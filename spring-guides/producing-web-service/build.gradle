plugins {
//    id 'org.springframework.boot' version '3.0.1'
//    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springManageVersion}"
    id 'java'
}

group = 'org.bougainvilleas'
version = "${projectVersion}"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
//    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    mavenCentral()
}

// tag::jaxb[]
configurations {
    jaxb
}
// end::jaxb[]

// tag::xsd[]
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.dir = "src/main/resources/xsd"
    ext.includes = "*.xsd"
    ext.excludes = "tmp.xsd"

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
// 多 xsd 文件 写法
// https://wenku.baidu.com/view/8fd10ea601d276a20029bd64783e0912a3167c58.html
            xjc(destdir: sourcesDir) {
                schema(dir: dir, includes: includes, excludes: excludes)
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

compileJava.dependsOn genJaxb
// end::xsd[]



// tag::dependencies[]
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'wsdl4j:wsdl4j'
    jaxb("org.glassfish.jaxb:jaxb-xjc")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
// end::dependencies[]

// tag::bootjar[]
bootJar {
    archiveBaseName = "${project.name}"
    archiveVersion = "${projectVersion}"
    // MANIFEST.MF 增加属性
    manifest{
        attributes('Implementation-Version':"${projectVersion}", 'Implementation-Title':"${project.name}")
    }
}
// end::bootjar[]
