package org.bougainvilleas.base.grace.chapter10;

/**
 * 136.枪打出头鸟—解决首要系统性能问题
 *
 * 解决性能优化要“单线程”小步前进，避免关注点过多而导致精力分散
 *
 * 在一个系统出现性能问题的时候，
 * 很少会出现只有一个功能有性能问题（一个功能出现性能问题的情况非常容易解决，基本上不会花费什么时间），
 * 系统一旦出现性能问题，也就意味着一批的功能都出现了问题，
 * 在这种情况下，
 *      我们要做的就是统计出业务人员认为重要而且缓慢的所有功能，
 *      然后按照重要优先级和响应时间进行排序，
 *      并找出前三名，而这就是我们要找的“准出头鸟”
 * 准出头鸟”找到了，然后再对这三个功能进行综合分析，
 * 运行“望闻问切”策略，找到问题的可能根源，
 * 然后只修正第一个功能的性能缺陷，再来测试检查是否解决了这个问题，
 * 紧接是第二个、第三个，循环之。
 * 可能读者会产生疑问：为什么这里只修正第一个缺陷，而不是三个一起全部修正？
 * 这是因为第一个性能缺陷才是我们真正的出头鸟，
 * 性能优化项目中超过80%的只要修正了第一个缺陷，
 * 其他的性能问题就会自行解决或非常容易解决，已经不成为问题了
 *
 * 解决性能问题时，不要把所有的问题都摆在眼前，这只会“扰乱”你的思维，
 * 集中精力，找到那个“出头鸟”，
 * 解决它，在大部分情况下，一批性能问题都会迎刃而解，
 * 而且用户关注最多的可能就是系统20%的功能，
 * 可能我们解决了这一部分，已经达到了用户的预期目标，也就标志着我们的优化工作可以结束了
 */
public class Fg {}