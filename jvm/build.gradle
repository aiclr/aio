buildscript {
    ext {
        set('appVersion', "1.0.0")
        set('lombokVersion', "1.18.24")
        set('junitVersion', "5.7.0")
    }
}

plugins {
    id 'java'
}

group 'org.bougainvilleas.base'
version = "${appVersion}" as Object

repositories {
    mavenLocal()
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    mavenCentral()
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
//    sourceCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    //启用所有警告信息 -Xlint:all 关闭 -Xlint:none
    options.compilerArgs << '-Xlint:all'
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

dependencies {
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //lombok注解gradle识别不到, 1.16.16可以编译，其他版本编译报错
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
}

test {
    useJUnitPlatform()
}

task getJavaHome {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        ext.javaHome = "${System.getenv("JAVA_HOME")}"
    } else {
        ext.javaHome = "/usr/lib/jvm/java-8-openjdk"
    }
    println "${System.getenv("JAVA_HOME")}"
    println getJavaHome.javaHome
}

compileJava {
    tasks.withType(JavaCompile) {
        options.bootstrapClasspath = fileTree(getJavaHome.javaHome+"/jre/lib/")
    }
}

compileTestJava {
    tasks.withType(JavaCompile) {
        options.bootstrapClasspath = fileTree(getJavaHome.javaHome+"/jre/lib/")
    }
}