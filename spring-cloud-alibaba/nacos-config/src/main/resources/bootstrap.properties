spring.application.name=nacos-config

# When configurations are loaded by Nacos Config,
# basic configurations with DataId of ${spring.application.name}. ${file-extension:properties} ,
# and DataId of ${spring.application.name}-${profile}. ${file-extension:properties} are also loaded.
# If you need to use different configurations from different environments,
# you can use the ${spring.profiles.active} configuration provided by Spring.
# dev,test,pro
spring.profiles.active: dev

# IP and port of the Nacos Server listener
spring.cloud.nacos.config.server-addr=127.0.0.1:8848

# First take the prefix, then go to the name, and finally take spring.application.name
#spring.cloud.nacos.config.name

# First take the prefix, then go to the name, and finally take spring.application.name
#spring.cloud.nacos.config.prefix

# Encode for nacos config content
#spring.cloud.nacos.config.encode

# GROUP for nacos config
# DEFAULT_GROUP is used by default when no {spring.cloud.nacos.config.group} configuration is defined
# This configuration must be in the bootstrap.properties file,
# and the value of Group must be the same with the value of spring.cloud.nacos.config.group.
spring.cloud.nacos.config.group=DEFAULT_GROUP

# The suffix of nacos config dataId, also the file extension of config content(now support properties or yaml(yml))
# nacos-config.properties
#spring.cloud.nacos.config.fileExtension=properties
# nacos-config.yaml
spring.cloud.nacos.config.fileExtension=yaml

# Timeout for get config from nacos
spring.cloud.nacos.config.timeout=3000

# Endpoint
#spring.cloud.nacos.config.endpoint

# Namespace
# The “Public” namespace of Nacos is used if no namespace is specified in ${spring.cloud.nacos.config.namespace}.
# This configuration must be in the bootstrap.properties file.
# The value of spring.cloud.nacos.config.namespace is the id of the namespace,
# and the value of id can be retrieved from the Nacos console.
# Do not select other namespaces when adding configurations.
# Otherwise configurations cannot be retrieved properly.
#spring.cloud.nacos.config.namespace

# Alibaba Cloud account accesskey
#spring.cloud.nacos.config.accessKey

# Alibaba Cloud account secretkey
#spring.cloud.nacos.config.secretKey

# The context path of Nacos Server
#spring.cloud.nacos.config.contextPath

# Cluster name
#spring.cloud.nacos.config.clusterName

# Dataid for Shared Configuration, split by ","
#spring.cloud.nacos.config.sharedDataids

# Dynamic refresh dataid for Shared Configuration, split by ","
#spring.cloud.nacos.config.refreshableDataids

# It’s a List，build up by Config POJO. Config has 3 attributes, dataId, group and refresh
#spring.cloud.nacos.config.extConfig

# disable automatic refresh
#spring.cloud.nacos.config.refresh.enabled=false

# disable Spring Cloud Nacos Config AutoConfiguration
#spring.cloud.nacos.config.enabled = false