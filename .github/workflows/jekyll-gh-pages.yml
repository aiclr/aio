# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - snapshot

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  # merged run
  initiate:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo initiate...
        
  # merged run
  finish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - run: |
        echo ${{ steps.deployment.outputs.page_url }}
        
  # Build job
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: initiate
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: docs
          destination: docs/_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    if: github.event.pull_request.merged == true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
