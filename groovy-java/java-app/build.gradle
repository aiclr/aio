/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */
buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.bougainvilleas:gradle-tasks:0.0.1")
    }
}

plugins {
    id 'org.bougainvilleas.ilj.application'
    id 'org.bougainvilleas.ilg.plugin' version '0.0.1'
    id 'org.bougainvilleas.ilj.build-src-plugin'
}

dependencies {
    implementation 'org.apache.commons:commons-text'
    implementation project(':java-utilities')
}

application {
    // Define the main class for the application.
    mainClass = 'org.bougainvilleas.ilj.app.App'
}

/**
 * script task
 */

abstract class GreetingTask_Script extends DefaultTask {

    @Input
    abstract Property<String> getGreeting()

    GreetingTask_Script() {
        //默认值
        greeting.convention('hello_script from GreetingTask_Script')
    }

    @TaskAction
    def greet() {
        println greeting.get()
    }
}
tasks.register('hello_script', GreetingTask_Script)

tasks.register('greeting_script',GreetingTask_Script){
    greeting='greetings_script from GreetingTask_Script'
}

/**
 * a standalone project task
 * model ---> gradle-tasks
 */

tasks.register('greeting_standalone_project_task',org.bougainvilleas.ilg.task.GreetingTask){
    greeting ='howdy!'
}

/**
 * plugin script
 */

abstract class GreetingPluginScriptExtension {
    abstract Property<String> getMessage()

    GreetingPluginScriptExtension() {
        message.convention('Hello from GreetingPluginScript')
    }
}


class GreetingPluginScript implements Plugin<Project> {
    void apply(Project project){
        // Add the 'greeting_extension_script' extension object
        def extension = project.extensions.create('greeting_extension_script', GreetingPluginScriptExtension)
        // Add a task that uses configuration from the extension object
        project.task('hello_plugins_script') {
            doLast {
                println extension.message.get()
            }
        }
    }
}

apply plugin:GreetingPluginScript
greeting_extension_script.message='Hi from Gradle'

/**
 * plugin script multi params
 */

interface GreetingPluginScriptExtensionForMulti {
    Property<String> getMessage()
    Property<String> getGreeter()
}

class GreetingPluginScriptForMulti implements Plugin<Project> {
    void apply(Project project) {
        def extension = project.extensions.create('greeting_extension_script_for_multi', GreetingPluginScriptExtensionForMulti)
        project.task('hello_plugins_script_for_multi') {
            doLast {
                println "${extension.message.get()} from ${extension.greeter.get()}"
            }
        }
    }
}

apply plugin: GreetingPluginScriptForMulti
greeting_extension_script_for_multi{
    message = 'Hi script'
    greeter = 'Gradle script'
}

/**
 *  a standalone project
 *  gradle-plugins
 *  Configure the extension using a DSL block
 */
greeting {
    def mp=new HashMap<String,String>()
    mp.put("kkk","vvv")
    kv=mp

    def lst = new ArrayList<String>()
    lst.add("ParkingApplication.class")
    lst.add("DeviceApplication.class")
    lst.add("WatchApplication.class")
    lst.add("SyncApplication.class")
    skip = lst

    message = 'Hi'
    greeter = 'Gradle'
}

/**
 * buildSrc tasks
 */
tasks.register('buildSrcTasks', org.bougainvilleas.ilj.tasks.JTask) {

    def mp=new HashMap<String,String>()
    mp.put("kkk","vvv")
    map=mp

    def lst = new ArrayList<String>()
    lst.add("ParkingApplication.class")
    lst.add("DeviceApplication.class")
    lst.add("WatchApplication.class")
    lst.add("SyncApplication.class")
    skip = lst


    greeter='buildSrc/src/main/java/org/bougainvilleas/ilj/Task#getGreeter()'
    message='buildSrc/src/main/java/org/bougainvilleas/ilj/Task#getMessage()'
}

/**
 * buildSrc plugins
 * 引入 plugins

 plugins {
    id 'org.bougainvilleas.ilj.build-src-plugin'
 }

 */
buildSrcGreeting {
    def mp=new HashMap<String,String>()
    mp.put("kkk","vvv")
    kv=mp

    def lst = new ArrayList<String>()
    lst.add("ParkingApplication.class")
    lst.add("DeviceApplication.class")
    lst.add("WatchApplication.class")
    lst.add("SyncApplication.class")
    skip = lst

    message = 'Hi'
    greeter = 'Gradle'
}