/**
 * 一般优先使用 border-box，因为它可同时指定padding、width、border
 * 起手可写如下代码
 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  line-height: 1.4;
  //outline: 1px solid red;
}

html {
  height: 100%;
}

body {
  height: 100%;
  background-color: #f6f9fc;
}

h1 {
  font-size: 0.45rem;
  text-align: center;
}

h2 {
  font-size: 0.4rem;
  text-align: center;
}

h3 {
  font-size: 0.35rem;
  text-align: center;
}

h4 {
  font-size: 0.3rem;
  text-align: center;
}

h5 {
  font-size: 0.25rem;
  text-align: center;
}

h6 {
  font-size: 0.2rem;
  text-align: center;
}

img {
  max-width: 100%;
  height: auto;
  border-radius: 0.1rem;
  opacity: 1;
}

.container {
  height: 100%;
}

/* 隐藏所有滚动条 */
::-webkit-scrollbar {
  display: none;
}

.main {
  font-size: 0.2rem;
  //margin: 0;
  //padding: 5% 5% 0 5%;
  width: 100%;
  min-height: 90%;
  background-color: #f6f9fc;
  /* 加滚动条 限制内容超出组件范围 */
  overflow: auto;
  /* 调试小技巧 加个border */
  //border: 1px solid red;
  /*布局时使用border调试法会占用内部空间造成显示问题，可用以下代码替换*/
  //outline: 1px solid red;
  /* 将一个元素变为flex容器 */
  display: flex;
  //flex-direction: row; /*从左到右*/
  //flex-direction:row-reverse;/*从右到左*/
  //flex-direction:column;/*从上到下*/
  //flex-direction:column-reverse;/*从下到上*/
  //flex-wrap: nowrap; /*不折行*/
  //flex-wrap: wrap; /*折行*/
  //flex-wrap: wrap-reverse; /*上下倒置*/
  /*flex-direction flex-wrap 合并写法*/
  flex-flow: row wrap;
  /*主轴对齐*/
  //justify-content:flex-start;
  //justify-content:flex-end;
  //justify-content:center;
  //justify-content: space-between;
  justify-content: space-around;
  //justify-content:space-evenly;
  /*次轴对齐*/
  //align-items: flex-start;
  //align-items: flex-end;
  //align-items: center;
  align-items: stretch;
  /* 多行内容 */
  //align-content:flex-start;
  //align-content:flex-end;
  //align-content:center;
  //align-content:stretch;
  //align-content:space-between;
  //align-content:space-around;
}


/* index page */
.card {
  //outline: 1px solid red;
  //max-width: 32%;
  max-height: 92%;
  width: 6rem;
  /* flex 搭配使用*/
  //border: 0.05rem dashed rgba(43, 32, 100, 0.38);
  margin: 1% auto 1% auto;
  padding: 0.18rem;
  /* 右移 下移 模糊 扩大*/
  box-shadow: -0.075rem -0.05rem 0.1rem 0.05rem #2f4052;
  border-radius: 0.2rem;
  /* 宽度超过组件宽度 自动换行*/
  word-wrap: break-word;
  word-break: break-all;
  background-color: #2f405210;
  overflow: auto;
}

.list {
  margin: 0.3rem;
  font-size: 0.25rem;
  text-align: left;
  //list-style-type: circle;
  list-style-type: none;
  list-style-position: inside;
}


.list .item{
  max-width: 5rem;
  /* 超出隐藏 */
  overflow: hidden;
  /* 禁止换行 */
  white-space: nowrap;
  /* 超出使用省略号代替 */
  text-overflow: ellipsis;
  //animation: 5s wordsLoop linear infinite normal;
}

.list .item_l{
  max-width: 5rem;
  /* 超出隐藏 */
  overflow: hidden;
  /* 禁止换行 */
  white-space: nowrap;
  /* 超出使用省略号代替 */
  text-overflow: ellipsis;
}

.list .item_l:hover{
  /* 超出隐藏 */
  overflow: visible;
  /* 超出使用省略号代替 */
  text-overflow: unset;
  //过长隐藏
  animation-name: item_l_visible;
  animation-duration: 25s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-out;
}

a:link {
  color: #148982;
}

a:visited {
  color: #444444;
}

a:hover {
  color: rgba(165, 40, 73, 0.38);
}

a:active {
  color: #aa7ecd;
}

a {
  /* 取消下划线*/
  text-decoration-line: none;
}

/* blog page*/
.docs {
  font-size: 0.2rem;
  margin: 0;
  //padding: 0.2rem 5% 0 5%;
  max-width: 70%;
  max-height: 100%;
  background-color: #f6f9fc;
  /* 加滚动条 限制内容超出组件范围 */
  overflow: auto;
  word-wrap: break-word;
  word-break: break-all;
}



